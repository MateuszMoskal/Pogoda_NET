@model SerwisPogodowy.Models.ViewModels.UserLoginVM
@{
    ViewData["Title"] = "Logowanie";
}

<div class="text-center">
    @using (Html.BeginForm("LogIn", "User", FormMethod.Post, new { @class = "form-signin" }))
    {
        @Html.AntiForgeryToken()

        <img class="mb-4" src="/graphics/logo.jfif" alt="" width="72" height="72">
        <h1 class="h3 mb-3 font-weight-normal">Logowanie</h1>

        <!-- Wyświetl komunikaty błędów -->
        @if (TempData["ErrorMessage"] != null)
        {
            <div class="alert alert-danger">@TempData["ErrorMessage"]</div>
        }

        <div class="form-group mb-3">
            <label for="Email" class="sr-only">Email</label>
            @Html.TextBoxFor(m => m.Email, new
                {
                    @class = "form-control",
                    placeholder = "Email",
                    type = "email",
                    required = "required"
                })
            @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })
        </div>

        <div class="form-group mb-3">
            <label for="Password" class="sr-only">Hasło</label>
            @Html.PasswordFor(m => m.Password, new
                {
                    @class = "form-control",
                    placeholder = "Hasło",
                    required = "required"
                })
            @Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger" })
        </div>

        @if (!string.IsNullOrEmpty(Model.ErrorMessage))
        {
            <div class="alert alert-danger">@Model.ErrorMessage</div>
        }

        <button class="btn btn-lg btn-primary btn-block" type="submit">Zaloguj się</button>

        <div class="mt-3">
            <a asp-action="Register">Zarejestruj się</a>
        </div>
    }
</div>

@section Scripts {
    @await Html.PartialAsync("_ValidationScriptsPartial")
}