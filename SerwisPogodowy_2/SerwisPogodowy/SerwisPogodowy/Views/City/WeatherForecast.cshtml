@model SerwisPogodowy.Models.ViewModels.WheaterForecastVM
@{
    ViewData["Title"] = "Prognoza pogody";
}

<div class="container-fluid py-4">
    <!-- Nagłówek -->
    <div class="row mb-4">
        <div class="col-12">
            <div class="d-flex justify-content-between align-items-center flex-wrap">
                <div>
                    <h1 class="display-5 fw-bold text-primary mb-0">
                        <i class="fas fa-chart-line"></i> Prognoza pogody
                    </h1>
                    <h3 class="text-dark fw-normal">
                        @if (Model.City.Voivodeship != null)
                        {
                            @Model.City.Name

                            <text>, </text>

                            @Model.City.Voivodeship

                            <text>, </text>

                            @Model.City.CantryCode
                        }
                        else
                        {
                            @Model.City.Name

                            <text>, </text>

                            @Model.City.CantryCode
                        }
                    </h3>
                </div>
                <a asp-action="Index" class="btn btn-secondary mt-3 mt-md-0">
                    <i class="fas fa-arrow-left"></i> Powrót
                </a>
            </div>
        </div>
    </div>

    <!-- Karty z wykresami -->
    <div class="row g-4 mb-4">
        <!-- Wykres temperatury -->
        <div class="col-lg-6">
            <div class="chart-container">
                <h5 class="mb-3 text-dark fw-bold"><i class="fas fa-temperature-high text-danger"></i> Temperatura</h5>
                <canvas id="temperatureChart" height="300"></canvas>
            </div>
        </div>

        <!-- Wykres wilgotności i ciśnienia -->
        <div class="col-lg-6">
            <div class="chart-container">
                <h5 class="mb-3 text-dark fw-bold"><i class="fas fa-tint text-info"></i> Wilgotność i ciśnienie</h5>
                <canvas id="humidityPressureChart" height="300"></canvas>
            </div>
        </div>
    </div>

    <!-- Szczegółowa tabela -->
    <div class="row">
        <div class="col-12">
            <div class="card border-0 shadow-sm">
                <div class="card-header bg-primary text-white">
                    <h5 class="mb-0"><i class="fas fa-table"></i> Szczegółowa prognoza</h5>
                </div>
                <div class="card-body p-0">
                    <div class="table-responsive">
                        <table class="table table-hover mb-0">
                            <thead class="table-light">
                                <tr>
                                    <th><i class="fas fa-calendar"></i> Data i czas</th>
                                    <th class="text-center"><i class="fas fa-cloud"></i> Pogoda</th>
                                    <th class="text-center"><i class="fas fa-thermometer-half"></i> Temperatura</th>
                                    <th class="text-center"><i class="fas fa-hand-holding-water"></i> Odczuwalna</th>
                                    <th class="text-center"><i class="fas fa-tint"></i> Wilgotność</th>
                                    <th class="text-center"><i class="fas fa-tachometer-alt"></i> Ciśnienie</th>
                                    <th class="text-center"><i class="fas fa-wind"></i> Wiatr</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var weather in Model.Forecast)
                                {
                                    <tr>
                                        <td>
                                            <strong>@weather.Date.ToString("dd.MM")</strong><br>
                                            <small class="text-muted">@weather.Date.ToString("HH:mm")</small>
                                        </td>
                                        <td class="text-center">
                                            @if (!string.IsNullOrEmpty(weather.Icon))
                                            {
                                                <img src="@weather.IconUrl" alt="@weather.Description" class="weather-icon-small" />
                                                <br>
                                                <small class="text-muted">@weather.Description</small>
                                            }
                                        </td>
                                        <td class="text-center">
                                            <span class="badge bg-warning text-dark fs-6">@weather.Temperature.ToString("F1")°C</span>
                                        </td>
                                        <td class="text-center">@weather.FeelsLike.ToString("F1")°C</td>
                                        <td class="text-center">
                                            <div class="progress" style="height: 20px;">
                                                <div class="progress-bar bg-info" style="width: @weather.Humidity%">
                                                    @weather.Humidity%
                                                </div>
                                            </div>
                                        </td>
                                        <td class="text-center">@weather.Pressure hPa</td>
                                        <td class="text-center">
                                            <span class="badge bg-primary">@weather.WindSpeed m/s</span>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<style>
    .chart-container {
        background: white;
        border-radius: 1rem;
        padding: 1.5rem;
        box-shadow: 0 4px 12px rgba(0,0,0,0.1);
        height: 100%;
    }

        .chart-container h5 {
            color: #212529 !important;
            border-bottom: 2px solid #f8f9fa;
            padding-bottom: 0.75rem;
            margin-bottom: 1.5rem !important;
        }

    .weather-icon-small {
        width: 50px;
        height: 50px;
    }

    .table tbody tr:hover {
        background-color: rgba(0, 123, 255, 0.05);
        transform: translateX(5px);
        transition: all 0.3s ease;
    }

    .progress {
        background-color: #e9ecef;
    }

    canvas {
        max-height: 300px !important;
    }
</style>

@section Scripts {
    <!-- Chart.js 3.x -->
    <script src="https://cdn.jsdelivr.net/npm/chart.js@3.9.1/dist/chart.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/chartjs-plugin-datalabels@2.2.0/dist/chartjs-plugin-datalabels.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/date-fns@2.29.3/index.min.js"></script>

    <script>
        // Przygotowanie danych
        const labels = @Html.Raw(Model.Labels);
        const temperatures = @Html.Raw(Model.Temperatures);

        // Dodatkowe dane
        const humidityData = [@foreach (var w in Model.Forecast)
        {
            @w.Humidity

            <text>, </text>
        }];
        const pressureData = [@foreach (var w in Model.Forecast)
        {
            @w.Pressure

            <text>, </text>
        }];

        // Konfiguracja Chart.js
        Chart.defaults.font.family = "'Inter', sans-serif";
        Chart.defaults.plugins.tooltip.backgroundColor = 'rgba(0, 0, 0, 0.8)';
        Chart.defaults.plugins.tooltip.padding = 12;
        Chart.defaults.plugins.tooltip.cornerRadius = 8;

        // Wykres temperatury
        const temperatureCtx = document.getElementById('temperatureChart').getContext('2d');
        new Chart(temperatureCtx, {
            type: 'line',
            data: {
                labels: labels,
                datasets: [{
                    label: 'Temperatura',
                    data: temperatures,
                    borderColor: '#ff6b6b',
                    backgroundColor: 'rgba(255, 107, 107, 0.1)',
                    borderWidth: 3,
                    tension: 0.4,
                    pointRadius: 4,
                    pointHoverRadius: 6,
                    pointBackgroundColor: '#ff6b6b',
                    fill: true
                }]
            },
            options: {
                responsive: true,
                maintainAspectRatio: false,
                interaction: {
                    mode: 'index',
                    intersect: false,
                },
                plugins: {
                    legend: {
                        display: true,
                        position: 'top',
                    },
                    tooltip: {
                        callbacks: {
                            label: function(context) {
                                return context.dataset.label + ': ' + context.parsed.y.toFixed(1) + '°C';
                            }
                        }
                    }
                },
                scales: {
                    y: {
                        beginAtZero: false,
                        grid: {
                            color: 'rgba(0, 0, 0, 0.05)'
                        },
                        ticks: {
                            callback: function(value) {
                                return value + '°C';
                            }
                        }
                    },
                    x: {
                        grid: {
                            display: false
                        },
                        ticks: {
                            maxRotation: 45,
                            minRotation: 45
                        }
                    }
                }
            }
        });

        // Wykres wilgotności i ciśnienia
        const humidityPressureCtx = document.getElementById('humidityPressureChart').getContext('2d');
        new Chart(humidityPressureCtx, {
            type: 'line',
            data: {
                labels: labels,
                datasets: [{
                    label: 'Wilgotność',
                    data: humidityData,
                    borderColor: '#339af0',
                    backgroundColor: 'rgba(51, 154, 240, 0.1)',
                    borderWidth: 3,
                    tension: 0.4,
                    yAxisID: 'y',
                    pointRadius: 4,
                    pointHoverRadius: 6,
                    fill: true
                }, {
                    label: 'Ciśnienie',
                    data: pressureData,
                    borderColor: '#845ef7',
                    backgroundColor: 'rgba(132, 94, 247, 0.1)',
                    borderWidth: 3,
                    tension: 0.4,
                    yAxisID: 'y1',
                    pointRadius: 4,
                    pointHoverRadius: 6,
                    fill: true
                }]
            },
            options: {
                responsive: true,
                maintainAspectRatio: false,
                interaction: {
                    mode: 'index',
                    intersect: false,
                },
                plugins: {
                    legend: {
                        display: true,
                        position: 'top',
                    }
                },
                scales: {
                    y: {
                        type: 'linear',
                        display: true,
                        position: 'left',
                        grid: {
                            color: 'rgba(0, 0, 0, 0.05)'
                        },
                        ticks: {
                            callback: function(value) {
                                return value + '%';
                            }
                        },
                        title: {
                            display: true,
                            text: 'Wilgotność (%)'
                        }
                    },
                    y1: {
                        type: 'linear',
                        display: true,
                        position: 'right',
                        grid: {
                            drawOnChartArea: false,
                        },
                        ticks: {
                            callback: function(value) {
                                return value + ' hPa';
                            }
                        },
                        title: {
                            display: true,
                            text: 'Ciśnienie (hPa)'
                        }
                    },
                    x: {
                        grid: {
                            display: false
                        },
                        ticks: {
                            maxRotation: 45,
                            minRotation: 45
                        }
                    }
                }
            }
        });

        // Animacja przy przewijaniu
        const chartContainers = document.querySelectorAll('.chart-container');
        const observer = new IntersectionObserver((entries) => {
            entries.forEach(entry => {
                if (entry.isIntersecting) {
                    entry.target.style.opacity = '1';
                    entry.target.style.transform = 'translateY(0)';
                }
            });
        }, { threshold: 0.1 });

        chartContainers.forEach(container => {
            container.style.opacity = '0';
            container.style.transform = 'translateY(20px)';
            container.style.transition = 'all 0.6s ease';
            observer.observe(container);
        });
    </script>
}